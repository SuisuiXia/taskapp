{"ast":null,"code":"var _jsxFileName = \"/Users/suisui/taskapp/frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  useEffect(() => {\n    axios.get('/api/tasks/').then(res => {\n      setTasks(res.data);\n    }).catch(err => console.log(err));\n  }, []);\n  const addTask = () => {\n    axios.post('/api/tasks/add/', {\n      title: title,\n      completed: false\n    }).then(res => setTasks([...tasks, res.data])).catch(err => console.log(err));\n    setTitle('');\n  };\n  const deleteTask = id => {\n    axios.delete(`/api/tasks/delete/${id}/`).then(res => setTasks(tasks.filter(task => task.id !== id))).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      deleteTask: deleteTask\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"msNF/MU9L2yQi+zudG/nQ0TQ3Ok=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Task","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","title","setTitle","get","then","res","data","catch","err","console","log","addTask","post","completed","deleteTask","id","delete","filter","task","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["/Users/suisui/taskapp/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Task from './Task';\n\nconst TaskList = () => {\n    const [tasks, setTasks] = useState([]);\n    const [title, setTitle] = useState('');\n\n    useEffect(() => {\n        axios.get('/api/tasks/')\n            .then(res => {\n                setTasks(res.data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    const addTask = () => {\n        axios.post('/api/tasks/add/', { title: title, completed: false })\n            .then(res => setTasks([...tasks, res.data]))\n            .catch(err => console.log(err));\n        setTitle('');\n    }\n\n    const deleteTask = (id) => {\n        axios.delete(`/api/tasks/delete/${id}/`)\n            .then(res => setTasks(tasks.filter(task => task.id !== id)))\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div>\n            <h1>Task Manager</h1>\n            <input\n                type=\"text\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                placeholder=\"New Task\"\n            />\n            <button onClick={addTask}>Add Task</button>\n            {tasks.map(task => (\n                <Task key={task.id} task={task} deleteTask={deleteTask} />\n            ))}\n        </div>\n    );\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACU,GAAG,CAAC,aAAa,CAAC,CACnBC,IAAI,CAACC,GAAG,IAAI;MACTL,QAAQ,CAACK,GAAG,CAACC,IAAI,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,OAAO,GAAGA,CAAA,KAAM;IAClBlB,KAAK,CAACmB,IAAI,CAAC,iBAAiB,EAAE;MAAEX,KAAK,EAAEA,KAAK;MAAEY,SAAS,EAAE;IAAM,CAAC,CAAC,CAC5DT,IAAI,CAACC,GAAG,IAAIL,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEM,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3CC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;IACnCN,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMY,UAAU,GAAIC,EAAE,IAAK;IACvBtB,KAAK,CAACuB,MAAM,CAAC,qBAAqBD,EAAE,GAAG,CAAC,CACnCX,IAAI,CAACC,GAAG,IAAIL,QAAQ,CAACD,KAAK,CAACkB,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC,CAC3DR,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,oBACIZ,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB3B,OAAA;MACI4B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExB,KAAM;MACbyB,QAAQ,EAAGC,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC;IAAU;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACF3B,OAAA;MAAQkC,OAAO,EAAEnB,OAAQ;MAAAQ,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC1CxB,KAAK,CAACgC,GAAG,CAACb,IAAI,iBACXtB,OAAA,CAACF,IAAI;MAAewB,IAAI,EAAEA,IAAK;MAACJ,UAAU,EAAEA;IAAW,GAA5CI,IAAI,CAACH,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuC,CAC5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAzB,EAAA,CAxCKD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}